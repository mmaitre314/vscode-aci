{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.38.33.27573",
      "templateHash": "15060132604260727167"
    }
  },
  "parameters": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "Container instance name"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Resource location"
      }
    },
    "image": {
      "type": "string",
      "defaultValue": "mcr.microsoft.com/devcontainers/python:dev-3",
      "metadata": {
        "description": "Dev Container image name (see available images on [MCR](https://mcr.microsoft.com?search=devcontainers))"
      }
    },
    "gitRepoUrl": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "URL of Git repository to clone"
      }
    },
    "gitUserEmail": {
      "type": "string",
      "defaultValue": "[deployer().userPrincipalName]"
    },
    "gitUserName": {
      "type": "string",
      "defaultValue": "[split(deployer().userPrincipalName, '@')[0]]"
    },
    "vscodeExtensions": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "VSCode extensions to install (e.g. [\"ms-python.python\"], leave empty to skip)"
      }
    },
    "initCommand": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Command to run during container initialization (e.g. \"apt install git-all\", leave empty to skip)"
      }
    },
    "cpuCores": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "Number of CPU cores"
      }
    },
    "memoryInGB": {
      "type": "int",
      "defaultValue": 6,
      "metadata": {
        "description": "Memory in GB"
      }
    },
    "autoShutdown": {
      "type": "string",
      "defaultValue": "3d",
      "metadata": {
        "description": "Auto-shutdown after this duration (e.g. 4h, 1d, infinity)"
      }
    },
    "sharedName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "Name of resources shared by container instances (Managed Identity, Log Analytics, network, etc.)"
      }
    },
    "serviceTag": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Service tag for outbound network traffic (leave empty in most cases)"
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2025-01-31-preview",
      "name": "[parameters('sharedName')]",
      "location": "[parameters('location')]"
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2025-02-01",
      "name": "[parameters('sharedName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "name": "PerGB2018"
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2025-04-01",
      "name": "[format('{0}-network', parameters('name'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[parameters('sharedName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "serviceTag": {
            "value": "[parameters('serviceTag')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.38.33.27573",
              "templateHash": "2615872367714658733"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "serviceTag": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2024-07-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard"
              },
              "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": "[if(not(equals(parameters('serviceTag'), '')), createArray(createObject('ipTagType', 'FirstPartyUsage', 'tag', parameters('serviceTag'))), createArray())]"
              }
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2024-07-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "properties": {
                "securityRules": []
              }
            },
            {
              "type": "Microsoft.Network/natGateways",
              "apiVersion": "2024-07-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard"
              },
              "properties": {
                "idleTimeoutInMinutes": 4,
                "publicIpAddresses": [
                  {
                    "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('name'))]"
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('name'))]"
              ]
            },
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2024-07-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "10.0.0.0/16"
                  ]
                },
                "subnets": [
                  {
                    "name": "aci",
                    "properties": {
                      "addressPrefix": "10.0.0.0/24",
                      "defaultOutboundAccess": false,
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('name'))]"
                      },
                      "natGateway": {
                        "id": "[resourceId('Microsoft.Network/natGateways', parameters('name'))]"
                      },
                      "delegations": [
                        {
                          "name": "Microsoft.ContainerInstance/containerGroups",
                          "properties": {
                            "serviceName": "Microsoft.ContainerInstance/containerGroups"
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/natGateways', parameters('name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('name'))]"
              ]
            }
          ],
          "outputs": {
            "vnetId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('name'))]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2025-04-01",
      "name": "[format('{0}-container', parameters('name'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[parameters('name')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "image": {
            "value": "[parameters('image')]"
          },
          "gitRepoUrl": {
            "value": "[parameters('gitRepoUrl')]"
          },
          "gitUserEmail": {
            "value": "[parameters('gitUserEmail')]"
          },
          "gitUserName": {
            "value": "[parameters('gitUserName')]"
          },
          "vscodeExtensions": {
            "value": "[parameters('vscodeExtensions')]"
          },
          "initCommand": {
            "value": "[parameters('initCommand')]"
          },
          "cpuCores": {
            "value": "[parameters('cpuCores')]"
          },
          "memoryInGB": {
            "value": "[parameters('memoryInGB')]"
          },
          "autoShutdown": {
            "value": "[parameters('autoShutdown')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.38.33.27573",
              "templateHash": "13469694250966181603"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "Container instance name"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Resource location"
              }
            },
            "image": {
              "type": "string",
              "defaultValue": "mcr.microsoft.com/devcontainers/python:dev-3",
              "metadata": {
                "description": "Dev Container image name (see available images on [MCR](https://mcr.microsoft.com?search=devcontainers))"
              }
            },
            "gitRepoUrl": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "URL of Git repository to clone"
              }
            },
            "gitUserEmail": {
              "type": "string",
              "defaultValue": "[deployer().userPrincipalName]"
            },
            "gitUserName": {
              "type": "string",
              "defaultValue": "[split(deployer().userPrincipalName, '@')[0]]"
            },
            "vscodeExtensions": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "VSCode extensions to install (e.g. [\"ms-python.python\"], leave empty to skip)"
              }
            },
            "initCommand": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Command to run during container initialization (e.g. \"apt install git-all\", leave empty to skip)"
              }
            },
            "cpuCores": {
              "type": "int",
              "defaultValue": 1,
              "metadata": {
                "description": "Number of CPU cores"
              }
            },
            "memoryInGB": {
              "type": "int",
              "defaultValue": 6,
              "metadata": {
                "description": "Memory in GB"
              }
            },
            "autoShutdown": {
              "type": "string",
              "defaultValue": "3d",
              "metadata": {
                "description": "Auto-shutdown after this duration (e.g. 4h, 1d, infinity)"
              }
            },
            "sharedName": {
              "type": "string",
              "defaultValue": "[resourceGroup().name]",
              "metadata": {
                "description": "Name of resources shared by container instances (Managed Identity, Log Analytics, network, etc.)"
              }
            }
          },
          "variables": {
            "copy": [
              {
                "name": "vscodeExtensionArgs",
                "count": "[length(parameters('vscodeExtensions'))]",
                "input": "[format('--install-extension {0}', parameters('vscodeExtensions')[copyIndex('vscodeExtensionArgs')])]"
              }
            ],
            "gcmVersion": "2.6.1",
            "assertNameIsNotEmpty": "[div(1, if(less(length(parameters('name')), 3), 0, 1))]",
            "gitCommandTemplate": "[replace(replace(replace(replace('  (\n    curl -sSL https://github.com/git-ecosystem/git-credential-manager/releases/download/v{{gcmVersion}}/gcm-linux_amd64.{{gcmVersion}}.tar.gz --output /tmp/gcm-linux_amd64.tar.gz\n    tar -xzf /tmp/gcm-linux_amd64.tar.gz -C /usr/local/bin\n    git-credential-manager configure\n    git config --global user.name \"{{gitUserName}}\"\n    git config --global user.email \"{{gitUserEmail}}\"\n    git clone --filter=tree:0 --single-branch {{gitRepoUrl}} /root\n  )&\n  ', '{{gcmVersion}}', variables('gcmVersion')), '{{gitRepoUrl}}', parameters('gitRepoUrl')), '{{gitUserEmail}}', parameters('gitUserEmail')), '{{gitUserName}}', parameters('gitUserName'))]",
            "vsCodeCommandTemplate": "[replace(replace('  (\n    curl -sSL \"https://code.visualstudio.com/sha/download?build=stable&os=cli-alpine-x64\" --output /tmp/vscode-cli.tar.gz\n    tar -xzf /tmp/vscode-cli.tar.gz -C /usr/local/bin\n    code tunnel user login --provider microsoft\n    code tunnel --accept-server-license-terms --name {{name}} {{vscodeExtensionArgs}}\n  )&\n  ', '{{vscodeExtensionArgs}}', join(variables('vscodeExtensionArgs'), ' ')), '{{name}}', parameters('name'))]",
            "command": "[replace(replace(replace(replace(replace('  set -euxo pipefail\n  exec &> >(tee /root/vscode-aci.log)\n  {{initCommand}}\n  {{gitCommandTemplate}}\n  {{vsCodeCommandTemplate}}\n  cd /root\n  sleep {{autoShutdown}}\n  ', '{{initCommand}}', parameters('initCommand')), '{{gitCommandTemplate}}', if(equals(parameters('gitRepoUrl'), ''), '', variables('gitCommandTemplate'))), '{{vsCodeCommandTemplate}}', variables('vsCodeCommandTemplate')), '{{autoShutdown}}', parameters('autoShutdown')), '\r', '')]"
          },
          "resources": [
            {
              "type": "Microsoft.ContainerInstance/containerGroups",
              "apiVersion": "2024-11-01-preview",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('sharedName')))]": {}
                }
              },
              "properties": {
                "containers": [
                  {
                    "name": "default",
                    "properties": {
                      "image": "[parameters('image')]",
                      "resources": {
                        "requests": {
                          "cpu": "[parameters('cpuCores')]",
                          "memoryInGB": "[parameters('memoryInGB')]"
                        }
                      },
                      "environmentVariables": [
                        {
                          "name": "GCM_CREDENTIAL_STORE",
                          "value": "cache"
                        },
                        {
                          "name": "GCM_AZREPOS_CREDENTIALTYPE",
                          "value": "oauth"
                        },
                        {
                          "name": "GCM_AZREPOS_MANAGEDIDENTITY",
                          "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('sharedName')), '2025-01-31-preview').clientId]"
                        },
                        {
                          "name": "DOTNET_SYSTEM_GLOBALIZATION_INVARIANT",
                          "value": "1"
                        }
                      ],
                      "command": [
                        "/bin/bash",
                        "-c",
                        "[variables('command')]"
                      ]
                    }
                  }
                ],
                "osType": "Linux",
                "restartPolicy": "Never",
                "subnetIds": [
                  {
                    "id": "[format('{0}/subnets/aci', resourceId('Microsoft.Network/virtualNetworks', parameters('sharedName')))]"
                  }
                ],
                "diagnostics": {
                  "logAnalytics": {
                    "logType": "ContainerInstanceLogs",
                    "workspaceId": "[reference(resourceId('Microsoft.OperationalInsights/workspaces', parameters('sharedName')), '2025-02-01').customerId]",
                    "workspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('sharedName'))]",
                    "workspaceKey": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces', parameters('sharedName')), '2025-02-01').primarySharedKey]"
                  }
                }
              }
            }
          ],
          "outputs": {
            "inputValidations": {
              "type": "array",
              "value": [
                "[variables('assertNameIsNotEmpty')]"
              ]
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('sharedName'))]",
        "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('sharedName'))]",
        "[resourceId('Microsoft.Resources/deployments', format('{0}-network', parameters('name')))]"
      ]
    }
  ],
  "outputs": {
    "instructions": {
      "type": "string",
      "metadata": {
        "description": "VSCode tunnel instructions"
      },
      "value": "[format('Check container logs to get the device-code login:\n    az container logs --subscription {0} --resource-group {1} --name {2}\nOpen VSCode: https://vscode.dev/tunnel/{3}', subscription().subscriptionId, resourceGroup().name, parameters('name'), parameters('name'))]"
    }
  }
}